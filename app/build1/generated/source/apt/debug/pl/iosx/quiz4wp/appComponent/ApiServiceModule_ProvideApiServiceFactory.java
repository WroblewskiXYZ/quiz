// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package pl.iosx.quiz4wp.appComponent;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import pl.iosx.quiz4wp.QuizApp;
import pl.iosx.quiz4wp.model.services.ApiManager.APIService;

public final class ApiServiceModule_ProvideApiServiceFactory implements Factory<APIService> {
  private final ApiServiceModule module;

  private final Provider<QuizApp> appProvider;

  public ApiServiceModule_ProvideApiServiceFactory(
      ApiServiceModule module, Provider<QuizApp> appProvider) {
    assert module != null;
    this.module = module;
    assert appProvider != null;
    this.appProvider = appProvider;
  }

  @Override
  public APIService get() {
    return Preconditions.checkNotNull(
        module.provideApiService(appProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<APIService> create(ApiServiceModule module, Provider<QuizApp> appProvider) {
    return new ApiServiceModule_ProvideApiServiceFactory(module, appProvider);
  }

  /** Proxies {@link ApiServiceModule#provideApiService(QuizApp)}. */
  public static APIService proxyProvideApiService(ApiServiceModule instance, QuizApp app) {
    return instance.provideApiService(app);
  }
}
